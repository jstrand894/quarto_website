---
title: "Bugs"
output: html_document
---

```{r  echo = F, eval = F}
# Set the directory path
directory_path <- "img/bugs"

# List all the files in the directory
file_names <- list.files(directory_path)

# Exclude files with .zip extension
file_names <- file_names[!grepl("\\.zip$", file_names)]

# Initialize an empty character vector to store the HTML code
html_code <- "<div class=\"gallery\">\n"

# Loop through each file name and generate HTML code
for (i in seq_along(file_names)) {
  # Generate the HTML code for each image
  image_html <- paste0('<img src="', directory_path, "/", file_names[i], '" alt="Image ', i, '" onclick="expandImage(this)">\n')
  
  # Append the generated HTML code to the existing code
  html_code <- paste(html_code, image_html, sep = "")
}

# Close the gallery div
html_code <- paste(html_code, "</div>\n<div class=\"expanded-container\" onclick=\"closeExpanded()\">\n  <img class=\"expanded\" id=\"expanded-image\" onclick=\"navigateGallery(event)\">\n</div>", sep = "")

# Print the final HTML code
cat(html_code)
```

```{=html}
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Image Gallery</title>
  <style>
    .gallery {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
      grid-gap: 10px;
    }
    .gallery img {
      width: 100%;
      height: 100%;
      object-fit: cover; /* Ensure images cover the entire space */
      cursor: pointer;
      transition: transform 0.3s ease;
    }
    .gallery img:hover {
      transform: scale(1.05); /* Slightly increase size on hover */
    }
    .expanded-container {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.8); /* Semi-transparent background */
      display: none; /* Initially hidden */
      justify-content: center;
      align-items: center;
      z-index: 9999;
    }

    .expanded {
      max-width: 80%;
      max-height: 80%;
      cursor: pointer;
    }
  </style>
</head>
<body>

<div class="gallery">
<img src="img/bugs/blueflowers.JPG" alt="Image 1" onclick="expandImage(this)">
<img src="img/bugs/brownmoth.JPG" alt="Image 2" onclick="expandImage(this)">
<img src="img/bugs/brownred-butterfly.JPG" alt="Image 3" onclick="expandImage(this)">
<img src="img/bugs/butterfly-purpleflower.JPG" alt="Image 4" onclick="expandImage(this)">
<img src="img/bugs/loco-bee.JPG" alt="Image 5" onclick="expandImage(this)">
</div>
<div class="expanded-container" onclick="closeExpanded()">
  <img class="expanded" id="expanded-image" onclick="navigateGallery(event)">
</div>

<script>
  var currentImageIndex = 0;
  var galleryImages = document.querySelectorAll('.gallery img');

  function expandImage(img) {
    currentImageIndex = Array.from(galleryImages).indexOf(img);
    document.getElementById('expanded-image').src = img.src;
    document.querySelector('.expanded-container').style.display = 'flex';
  }

  function closeExpanded() {
    document.querySelector('.expanded-container').style.display = 'none';
  }

  function navigateGallery(event) {
    // Calculate the click position relative to the expanded image
    var clickX = event.pageX - event.target.getBoundingClientRect().left;
    var imageWidth = event.target.offsetWidth;

    // Determine if the click was on the left or right side of the image
    if (clickX < imageWidth / 2) {
      // Clicked on the left side: navigate to the previous image
      currentImageIndex = (currentImageIndex - 1 + galleryImages.length) % galleryImages.length;
    } else {
      // Clicked on the right side: navigate to the next image
      currentImageIndex = (currentImageIndex + 1) % galleryImages.length;
    }

    // Update the expanded image source
    document.getElementById('expanded-image').src = galleryImages[currentImageIndex].src;
  }
</script>

</body>
</html>

```

<br>
```{=html}
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Download File Button</title>
<style>
/* Button styling */
.button {
  background-color: #2068DC; /* Header of website color (blue) */
  border: none;
  color: white;
  padding: 15px 32px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 16px;
  margin: 4px 2px;
  cursor: pointer;
  border-radius: 8px;
}
.button:hover {
  background-color: #3F91FB; /* Sky blue */
}
</style>
</head>
<body>

<!-- Button to download the file -->
<a href="img/bugs/Jackson-Bug-Pics.zip" download="Jackson Bug Pictures">
  <button class="button">Download All Pictures</button>
</a>

</body>
</html>

```



```{=html}
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Image Crop Example</title>
<style>
  .image-container {
    width: 300px; /* Set the width of the container */
    height: 200px; /* Set the height of the container */
    overflow: hidden; /* Hide any overflowing content */
  }
  .cropped-image {
    width: 100%; /* Set the width of the image to fill the container */
    height: auto; /* Automatically adjust the height to maintain aspect ratio */
    object-fit: cover; /* Crop the image to cover the container */
  }
</style>
</head>
<body>

<div class="image-container">
  <img class="cropped-image" src="img/bugs/loco-bee.png" alt="Cropped Image">
</div>

</body>
</html>

```