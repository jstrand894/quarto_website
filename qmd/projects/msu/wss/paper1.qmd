---
title: "Paper 1: Smooth brome and parasitoids"
editor_options: 
  chunk_output_type: console
bibliography: proposal.bib
link-citations: true
biblio-style: apalike
cls: elsevier-with-titles.csl
---

## Introduction

## Materials and Methods

### Weather data and NDVI analysis

*Weather data.* We assessed the long and medium term temperature and precipitation trends of our field sites using weather data from the National Oceanic and Atmospheric Administration (NOAA, Silver Spring, MA, USA). Data for each field site was averaged from three of the closest weather stations to that location. Data was plotted using R Studio (R Studio version 2024.04.0+735, R 2024) package 'ggplot' (version 3.4.4) [@ggplot]. Data was then fit using a linear model using the 'lm' command using average yearly precipitation (inches) as the response variable and year as the predictor.

*NDVI analysis.* We compared the relative greening throughout the growing season between wheat fields and adjacent *B. inermis* using the normalized difference vegetation index (NDVI). NDVI is typically used to assess vegetation health and density, and is calculated from the visible and near-infared light reflected by vegetation [@Pettorelli2005]. Data was downloaded using Google Earth Engine (Google Inc. 2023, Mountain View, CA, USA).

### Controlled *C. cinctus* infestation of *B. inermis*

*Insects and Cages.* Assessment of *C. cinctus* infestation and mortality within *B. inermis* were assessed using a 34 x 60 ft plot at the Arthur H. Post Agronomy Farm (43°38'19.39"N, 116°14'28.86"W), an extension research station of Montana State University in Bozeman, MT. The cage structure was built using 1-inch PVC piping with the netting made using 530$\mu$ Amber Lumite Screen (BioQuip$^\circledR$ Products, LLC). Twelve cages were built to dimensions of 6ft x 3ft x 3ft (L x W x H) with cage locations selected randomly based on the space available within the plot and arranged in sets of three.

Wheat stem stubble was collected in Three Forks, MT, USA (43°38'19.39"N, 116°14'28.86"W) from fields that experienced high levels of *C. cinctus* infestation and cutting the year prior. Cut stubble, which contained *C. cinctus* larvae in diapause, were kept refrigerated between -2°C and 3°C for \>100 days as required to complete obligatory larval diapause. As needed, stubs were removed from refrigeration and kept at 22-27°C for 4-5 weeks inside of 100 oz GladWare® storage containers (Glad®, Oakland, California USA). Once *B. inermis* stems reached six inches tall, stub containers with emerging sawflies were added to cages to mimic sawfly infestation pressure. Sawfly quantity treatments were as follows: high (600 stubs), low (200 stubs), and control (0 stubs).

*Data Collection.* In late August, *B. inermis* stems were collected from each cage. Each stem was sliced open using X-Acto® knives to collect data on infestation, dead larvae, live larvae, and parasitism at each internode.

### Montana Field Survey

*Stem collection and processing.* We conducted a field survey to assess *C. cinctus* infestation, larval mortality, and *B. cephi* and *B. lissogaster* prevalence within *B. inermis* and adjacent wheat fields. Sites were chosen across 2 counties in north-central Montana, United States. (Chouteau, Judith Basin), which consistently experience high *C. cinctus* pressure. Samples were collected from wheat fields and adjacent *B. inermis* in early July and late August in 2021, 2022, and 2023 from sites in Big Sandy, Moccasin, and Amsterdam, MT, USA. Sampling sites were set up as 100$m^2$ polygons along the edge of adjoining wheat fields. Four collection squares of 1ft x 1ft were randomly selected within each polygon during both collection events each year. All stems within each 1 x 1 ft square were collected using a shovel to remove both stem and root material. Wheat stems were collected at distances of 5 and 20 meters from the edge of the field. Samples were collected in 4 rows at 10 meters apart. 2 samples were collected in each row at distances of 5 and 20 meters. 1 ft samples were collected at each point.

Wheat and *B. inermis* stems were then returned to Montana State University, Bozeman, Montana and stored in a 10°C cold wet storage until dissection. Stems were dissected lengthwise with a fine-bladed scalpel to determine presence or absence of *C. cinctus* larvae infestation, live eggs, dead eggs, dead larvae, live larvae, parasitism, and cutting. Sawfly larvae were identified based on descriptions in Criddle (1915) and Wallace and McNeal (1996).

*Statistical Analysis.* We used generalized linear mixed models with binomial errors (logit link) fit using bound optimization by quadratic approximation, with a maximum of 200,000 iterations, were run in the *lme4* package in R [@lme4] to examine the effects of location and year (fixed effects) on each of the three response variables: proportion of stems infested, proportion of stems cut, and proportion os stems parasitized by *Bracon* spp. '

To better understand the density of *Bracon* spp. within the wheat and *B. inermis* sampling sites, we converted our units to the ratio of parasitoids to stem per unit area. Densities of stems are different when considering *B. inermis* and cultivated wheat or barley. Using this conversion, we attempted to better understand how the density of parasitoids (and WSS) is changed by looking at each kind of plant.

## Results

```{r setup1, include=FALSE}
knitr::opts_chunk$set(
  warning = FALSE,
  message = FALSE,
  echo = FALSE
)
```

```{r libraries}
library(markdown)
library(tidyverse)
library(glue)
library(lubridate)
library(ggplot2)
library(maps)
library(readxl)
library(kableExtra)
library(openxlsx)
```

### Historical Weather Analysis

```{r moc_weather}
# moccasin NOAA
moc_weather_noaa <-
read_excel("weather/moccasin_weather_noaa.xlsx") %>%
  filter(station == "USW00024036") %>%
  dplyr::select(date, variable, value, year) %>%
  mutate(date = ymd(date))

# moccasin prcp MAES
moc_prcp_maes <-
  read_excel("weather/moc_weather_maes.xlsx",
             sheet = "prcp") %>%
    dplyr::select(-1, -Annual, -Seasonal) %>%
    pivot_longer(-Year,
                 names_to = "month",
                 values_to = "prcp") %>%
    mutate(Year = lubridate::year(as.Date(Year, format = "%Y"))) %>%
    rename("year" = Year) %>%
    group_by(year) %>%
    reframe(prcp = sum(prcp)) 
  
# moccasin temp MAES
moc_temp_maes <-
  read_excel("weather/moc_weather_maes.xlsx",
             sheet = "temp") %>%
    dplyr::select(-1, -Annual, -Seasonal) %>%
    pivot_longer(-Year,
                 names_to = "month",
                 values_to = "temp") %>%
    mutate(Year = lubridate::year(as.Date(Year, format = "%Y"))) %>%
    rename("year" = Year) %>%
    group_by(year) %>%
    reframe(temp = mean(temp)) 

# past 50 years prcp data
moc_prcp_50 <-
moc_prcp_maes %>%
  filter(year > 1975)

# past 50 years temp data
moc_temp_50 <-
  moc_temp_maes %>%
  filter(year > 1975)
```

```{r bs_weather}
# big sandy
bs_weather <-
read_excel("weather/bigsandy_weather_noaa.xlsx") %>%
  filter(station == "USC00240770") %>%
  dplyr::select(date, variable, value, year) %>%
  mutate(date = ymd(date))

# past 50 years prcp data
bs_prcp_50 <-
bs_weather %>%
  filter(variable == "PRCP") %>%
  group_by(year) %>%
  reframe(prcp = mean(value)) %>%
  distinct() %>%
  filter(year > 1975,
         year < 2024,
         prcp < 25)

bs_temp_noaa <-
bs_weather %>%
  filter(variable %in% c("TMAX", "TMIN"),
         value < 100,
         value > -30) %>%
  pivot_wider(names_from = "variable",
              values_from = "value") %>%
  na.omit() %>%
  group_by(date) %>%
  mutate(daily = (TMAX - TMIN)/2) %>%
  group_by(year) %>%
  reframe(temp = mean(daily))


```

```{r both_prcp_plot}
both_locations_prcp <-
bs_prcp_50 %>%
  mutate(location = "Big Sandy") %>%
  rbind(moc_prcp_50 %>%
          mutate(location = "Moccasin"))

both_prcp_lm <-
both_locations_prcp %>%
  filter(location == "Big Sandy") %>%
  lm(prcp ~ year, data = .) %>%
  summary()

moc_50_lm <-
  moc_prcp_50 %>%
  lm(prcp ~ year, data = .) %>%
  summary()

bs_50_lm <-
  bs_prcp_50 %>%
  lm(prcp ~ year, data = .) %>%
  summary()

calculate_segment <- function(model) {
  intercept <- model$coefficients[1, 1]
  slope <- model$coefficients[2, 1]
  segment_formula <- function(x) intercept + slope * x
  x_start <- 1975
  x_end <- 2024
  y_start <- segment_formula(x_start)
  y_end <- segment_formula(x_end)
  segment_data <- data.frame(x_start, y_start, x_end, y_end)
  return(segment_data)
}

bs_segment <- calculate_segment(bs_50_lm)
moc_segment <- calculate_segment(moc_50_lm)

both_prcp_plot <-
both_locations_prcp %>%
  ggplot() +
  theme_bw() +
  geom_segment(data = bs_segment,
               aes(x = x_start, 
                   y = y_start,
                   xend = x_end, 
                   yend = y_end),
               color = "#F8766D",
               alpha = 0.5) +
  geom_segment(data = moc_segment,
               aes(x = x_start, 
                   y = y_start,
                   xend = x_end, 
                   yend = y_end),
               color = "#00BFC4",
               alpha = 0.5) +
  geom_line(aes(x = year, y = prcp, color = location),
            size = 0.3) +
  geom_smooth(aes(x = year, y = prcp),
              method = "lm",
              se = FALSE,
              color = "black",
              size = 0.5,
              alpha = 0.2) +
  labs(color = "Location (MT, USA)",
       x = NULL,
       y = "Average Yearly Precipitation (in)",
       title = "Average Yearly Precipitation",
       subtitle = "Big Sandy & Moccasin, MT, USA")
```

```{r both_temp_plot}
both_temp <-
moc_temp_maes %>%
  mutate(location = "Moccasin") %>%
  rbind(bs_temp_noaa %>%
          mutate(location = "Big Sandy")) 

both_temp_plot <-
both_temp %>%
  ggplot() +
  geom_line(aes(x = year, y = temp, color = location))

# lm both
both_temp_lm <-
both_temp %>%
  lm(temp ~ year, data = .) %>%
  summary()

# lm moc
moc_temp_lm <-
moc_temp_maes %>%
  lm(temp ~ year, data = .) %>%
  summary()


calculate_segment <- function(model) {
  intercept <- model$coefficients[1, 1]
  slope <- model$coefficients[2, 1]
  segment_formula <- function(x) intercept + slope * x
  x_start <- 1975
  x_end <- 2024
  y_start <- segment_formula(x_start)
  y_end <- segment_formula(x_end)
  segment_data <- data.frame(x_start, y_start, x_end, y_end)
  return(segment_data)
}

# moc_segment <- calculate_segment(moc_lm)

moc_temp_plot <-
moc_temp_maes %>%
  ggplot() +
  theme_bw() +
  geom_line(aes(x = year, y = temp),
            size = 0.4) + 
  geom_smooth(aes(x = year, y = temp),
              method = "lm",
              se = FALSE,
              size = 0.5,
              alpha = 0.2) +
  labs(color = "Location (MT, USA)",
       x = NULL,
       y = "Average Yearly Temperature (F)",
       title = "Average Yearly Temperature",
       subtitle = "Moccasin, MT, USA")

```

We observed a significant linear relationship (*r = `r round(both_prcp_lm$r.squared,3)`, P = `r round(both_prcp_lm$coefficients[2,4],3)`, estimate = `r round(both_prcp_lm$coefficients[2,1],3)`*) between average precipitation and year for both Big Sandy and Moccasin, Montana. This means that for each one year increase, we are seeing a decrease in 0.05 inches of precipitation.

```{r FIG1_both_prcp_plot_show, fig.cap = "Figure 1: Average yearly precipitation for Big Sandy and Moccasin, Montana. Black trend line signifies averaged negative trend between both locations. Data gathered from NOAA and MTARS."}
both_prcp_plot
```

In addition, we observed a significant positive linear relationship (*r = `r round(moc_temp_lm$r.squared,3)`, P \< 0.05, estimate = `r round(moc_temp_lm$coefficients[2,1],3)`*) between year and average yearly temperature for Moccasin, MT. This means that each year, the average daily temperature has increased by `r round(moc_temp_lm$coefficients[2,1],2)`°F.

```{r moc_temp_plot_show}
moc_temp_plot
```

### NDVI Analysis of Field Sites

```{r Big_Sandy_NDVI}
lochy <-
read_excel("ndvi/ndvi_2023.xlsx", sheet = "lochy") %>%
  filter(use == "yes") %>%
  mutate(date = ymd(date1)) %>%
  dplyr::select(date,wheat,brome) %>%
  pivot_longer(-date,
               names_to = "plant_type",
               values_to = "ndvi") 
ndvi_model <-
lochy %>%
  filter(date > "2023-07-15") %>%
  lm(ndvi ~ plant_type + date, data = .) %>%
  summary()


label_x <- as.Date("2023-07-20")
label_y <- 0.75
line_x <- as.numeric(as.Date("2023-07-20"))

bs_ndvi_plot <-
lochy %>%
  ggplot() +
  geom_point(aes(x = date, y = ndvi, color = plant_type),
             alpha = 0.5,
             pch = 1,
             size = 0.75) +
  geom_line(aes(x = date, y = ndvi, color = plant_type, linetype = plant_type),
            alpha = 0.5,
            size = 0.5) +
  geom_smooth(aes(x = date, y = ndvi, color = plant_type),
              se = FALSE) +
  geom_vline(xintercept = line_x,
             linetype = "dashed", color = "black") +
  geom_label(aes(x = label_x,
                 y = 0.75),
             label = "Spring wheat harvest",
             hjust = -0.1,
             size = 3) +
  geom_segment(aes(x = as.Date("2023-07-20")+5, 
                   y = 0.75, 
                   xend = as.Date("2023-07-20"), 
                   yend = 0.75)) +
  theme_bw() +
  guides(color = FALSE) +
  labs(x = "2023 Growing Season",
       y = "NDVI",
       linetype = NULL,
       title = "Seasonal NDVI Comparison",
       subtitle = expression(paste(italic("B. inermis"),
                                   " and adjacent spring wheat"))) +
  scale_linetype_discrete(labels = c(expression(italic("B. inermis")),
                                                      "Spring Wheat"))
```

We observed a notable difference in NDVI when comparing adjacent *B. inermis* and spring wheat. We saw a significant difference in the July NDVI (*`r round(ndvi_model$r.squared,3)`, P \< 0.05*). The *B. inermis* NDVI remained relatively linear in it's downslope (BROME SLOPE POST JULY) compared to the wheat field (WHEAT FIELD POST JULY).

```{r bs_ndvi_plot}
bs_ndvi_plot
```

Need to add map showing where NDVI measurments came from

### Controlled *C cinctus* Infestation of *B. inermis*

```{r column.order}
column.order <- c("distance", "collection", "p.inf", 
                  "p.cut", "p.par", "poten")

column.order2 <- c("location", "distance", "collection", "p.inf", 
                  "p.cut", "p.par", "poten")

round_based_on_size <- function(x) {
  threshold <- 0.01
  rounded_values <- ifelse(abs(x) > threshold, round(x, 2), round(x, 3))
  return(rounded_values)
}
```

```{r (pf.RAW) post farm n.inf data}
pf.raw.2022 <- read_excel("/Users/jacksonstrand/Library/CloudStorage/OneDrive-MontanaStateUniversity/Data/BWW/Field/Post\ Farm/2022/Post\ Farm\ 2022.xlsx", sheet = "n.inf")
pf.raw.2023 <- read_excel("/Users/jacksonstrand/Library/CloudStorage/OneDrive-MontanaStateUniversity/Data/BWW/Field/Post\ Farm/2023/Post\ Farm\ 2023.xlsx", sheet = "n.inf")
```

```{r (pf.inf.23) post farm inf data}
pf.inf.23 <- read_excel("/Users/jacksonstrand/Library/CloudStorage/OneDrive-MontanaStateUniversity/Data/BWW/Field/Post\ Farm/2023/Post\ Farm\ 2023.xlsx", sheet = "inf") %>%
  rename(n.1 = 8, n.2 = 9, n.3 = 10, n.4 = 11,
         n.5 = 12, n.6 = 13, n.7 = 14, n.8 = 15,
         n.9 = 16, n.10 = 17)
```

```{r (pf.comb) post farm data combined}
# 2022
pf.2022.site <-
pf.raw.2022 %>%
  group_by(treatment, site) %>%
  reframe(site, treatment,
            p.inf = sum(iv, ir, ix)/sum(uv, ur, iv, ir, ix),
            cut = sum(cut)/sum(total),
            total.stems = sum(iv, ir, ix, uv, ur)) %>%
  unique() %>%
  pivot_longer(-c(treatment, total.stems, site),
               names_to = "type",
               values_to = "percent") %>%
  mutate(year = "2022")

# 2023
pf.2023.site <-
pf.raw.2023 %>%
  group_by(treatment, site) %>%
  reframe(treatment, site, 
          t.inf = sum(n.iv, n.ir, n.ix),
          p.inf = sum(n.iv, n.ir, n.ix)/sum(n.uv, n.ur, 
                                            n.iv, n.ir, n.ix),
          cut = sum(cut)/sum(total),
          total.stems = sum(n.iv, n.ir, n.ix, n.uv, n.ur)) %>%
  distinct() %>%
  pivot_longer(-c(treatment, total.stems, site),
               names_to = "type",
               values_to = "percent") %>%
  filter(!type == "t.inf") %>%
  arrange(type) %>%
  mutate(year = "2023")

pf.comb <-
  pf.2022.site %>%
  rbind(pf.2023.site) %>%
  group_by(treatment, year, type) %>%
  mutate(count = n(),
         average = mean(percent),
         sd = sd(percent),
         se = (sd/sqrt(count))) %>%
  reframe(treatment, year, type,
          mean = mean(percent),
          sd = mean(sd),
          se = mean(se)) %>%
  unique()


```

```{r (pf.total) pf total stems}
# 2022 totals
pf.2022.total <-
  pf.raw.2022 %>%
  group_by(treatment) %>%
  reframe(total = sum(uv, ur, iv, ir, ix)) %>%
  mutate(year = "2022")
  
# 2023 totals
pf.2023.total <-
  pf.raw.2023 %>%
  group_by(treatment) %>%
  reframe(total = sum(n.uv, n.ur, n.iv, n.ir, n.ix)) %>%
  mutate(year = "2023")

pf.total.comb <-
  pf.2022.total %>%
  rbind(pf.2023.total)

```

```{r pf_lm}
raw.23 <-
pf.raw.2023 %>%
  dplyr::select(site, treatment,
                n.iv, n.ir, n.ix, n.ur, n.uv,
                cut) %>%
  rename(iv = n.iv,
         ir = n.ir,
         ur = n.ur,
         ix = n.ix,
         uv = n.uv) %>%
  mutate(year = 2023)

raw.22 <-
pf.raw.2022 %>%
  dplyr::select(site, treatment, 
                ix, ir, iv, ur, uv,
                cut) %>%
  mutate(year = 2022)

pf_inf_lm <-
raw.23 %>%
  rbind(raw.22) %>%
  group_by(site, treatment, year) %>%
  reframe(total = sum(iv, ir, ix, ur, uv),
          inf = sum(iv, ir, ix)) %>%
  lm(inf ~ treatment + year, data = .) %>%
  summary()

pf_cut_lm <-
raw.23 %>%
  rbind(raw.22) %>%
  group_by(site, treatment, year) %>%
  reframe(total = sum(iv, ir, ix, ur, uv),
          inf = sum(iv, ir, ix),
          cut = sum(cut)) %>%
  lm(cut ~ treatment + year, data = .) %>%
  summary()
```

```{r pf_per, eval = F}
raw.23 %>%
  rbind(raw.22) %>%
  group_by(treatment) %>%
  reframe(total = sum(iv, ir, ix, ur, uv),
          inf = sum(iv, ir, ix),
          cut = sum(cut),
          p.inf = inf/total,
          p.cut = cut/inf)
```

*C. cinctus* showed a high ability to infest *B. inermis* in the controlled test conditions. Averaged across both years, we observed 66.5% of stems infested for high treatments and 47.3% of stems for low treatments. We found strong evidence suggesting that there was a significant difference between infestation at high and low treatment levels when holding year constant (*r = `r round(pf_inf_lm$r.squared,3)`, P \< 0.05*).

Cutting was observed at 5.7% for the high treatments and 3.9% for the low, showing strong evidence for a difference in cutting between high and low treatment groups (*r = `r round(pf_cut_lm$r.squared,3)`, P \< 0.05*).

```{r inf_cut_plot}
ggplot() +
  facet_wrap(~treatment) +
  geom_bar(stat = "identity",
           position = position_dodge(),
           data = pf.comb %>%
             filter(type == "p.inf"),
           aes(year, mean, fill = "p.inf")) +
  geom_bar(stat = "identity",
           position = position_dodge(),
           data = pf.comb %>%
             filter(type == "cut"),
           aes(year, mean, fill = "cut")) +
  geom_errorbar(data = pf.comb,
                aes(x = year,
                    ymin = mean - se,
                    ymax = mean + se),
                position = position_dodge(0.9),
                width = 0.2,
                alpha = 0.5) +
  theme_bw() +
  labs(x = element_blank(),
       y = "Percentage of stems (%)",
       fill = element_blank()) +
  scale_fill_brewer(palette = "Greens",
                    labels = c("Cut", "Infested"))
```

### Montana Field Sites

```{r stubble data}
# stubble 2023
stubble.2023 <-
  read_excel("/Users/jacksonstrand/Library/CloudStorage/OneDrive-MontanaStateUniversity/Data/BWW/Field/field Sites/2023/2023\ Field Site\ Data.xlsx", 
           sheet = "stubble") %>%
  dplyr::select(-c(name,date.proc,"%inf", "%cut")) %>%
  na.omit() %>%
  mutate(year = "2023") 

# stubble 2022
stubble.2022 <-
  read_excel("/Users/jacksonstrand/Library/CloudStorage/OneDrive-MontanaStateUniversity/Data/BWW/Field/field Sites/2022/2022 FS Stem Data (2).xlsx", 
             sheet = "stubble") %>%
  mutate(year = "2022") %>%
  dplyr::select(-c(name, date.proc, "%inf", "%cut"))

comb.stubble <-
stubble.2023 %>%
  rbind(stubble.2022) %>%
  rename("c" = cocoon,
         "e" = eh,
         "total.stems" = total) %>%
  group_by(site, year, collection) %>%
  mutate(inf = sum(cut, inf.nc,c,e)) %>%
  dplyr::select(-c(inf.nc, larvae)) 
```

```{r brome data}
# brome 2022
raw.2022 <- 
  read_excel("/Users/jacksonstrand/Library/CloudStorage/OneDrive-MontanaStateUniversity/Data/BWW/Field/field Sites/2022/2022 FS Stem Data (2).xlsx", sheet = "n.infested") %>%
  mutate(year = "2022") %>%
  dplyr::select(-c(other, date.proc, name, 
                   par.rate, cut.rate, inf)) %>%
  rename("site" = site.cap)

# brome 2023
raw.2023 <-
read_excel("/Users/jacksonstrand/Library/CloudStorage/OneDrive-MontanaStateUniversity/Data/BWW/Field/field Sites/2023/2023\ Field Site\ Data.xlsx", sheet = "n.infested") %>%
  mutate(year = "2023") %>%
  dplyr::select(-c(loc.stub, date.proc, uv, ur, iv, ir, ix, 
                   total.stems, add, inf, a)) %>%
    rename(uv = n.uv,
           ur = n.ur,
           iv = n.iv,
           ir = n.ir,
           ix = n.ix,
           total.stems = n.total)
# combine brome years
comb.brome <- 
raw.2023 %>%
  rbind(raw.2022) %>%
  group_by(site, year, collection) %>%
  mutate(inf = sum(iv, ir, ix),
         uninf = sum(uv, ur),
         cut = sum(cut)) %>%
  dplyr::select(-c(iv, ir, ix, uv, ur)) %>%
  mutate(distance = "brome")
```

We quantified *C. cinctus* and *Bracon* spp. parasitoid presence in 6,148 wheat and grass stems across 10 research sites in 2022 and 2023. Infestation by *C. cinctus* within *B. inermis* varied between collection sites, with the greatest infestation taking place within our three Big Sandy, MT sampling sites (2023: 65.4%, 2022: 63.1%), while the lowest infestation observed was in Moccasin, MT (2023: 40.8%, 2022: 60.7%). Across all sites in Big Sandy and Moccasin, we observed an average infestation of 57.5% within *B. inermis* and 47.6% within the adjacent wheat.

Parasitoid presence was observed at the highest levels in 

```{r infestation_per, eval = F}
comb.brome %>%
  group_by(location, collection, year) %>%
  # filter(collection == "fall") %>%
  reframe(inf = sum(inf)/sum(total.stems)) %>%
  distinct() %>%
  mutate(region = if_else(location %in% c("har", "sun", "k", "chs"), "moccasin", "big sandy")) %>%
  group_by(collection, year, region) %>%
  reframe(inf = mean(inf)) %>%
  na.omit() %>%
  arrange(desc(inf))
```

```{r paraistism_per, eval = F}
# plot.data <-
comb.brome %>%
  rbind(comb.stubble) %>%
  na.omit() %>%
  filter(!location %in% c("chs", "b")) %>%
  mutate(sample_site = case_when(
    location %in% c("nn", "ss", "ns", "n") ~ "North Road",
    location %in% c("kw", "ke", "k") ~ "Kolin Road",
    location %in% c("sun", "har") ~ "Sunset & Harvest",
    location == "g" ~ "Gardiner Road",
    TRUE ~ NA_character_)) %>%
  mutate(region = case_when(
    location %in% c("nn", "ss", "ns", "n") ~ "Big Sandy",
    location == "g" ~ "Big Sandy",
    location %in% c("kw", "ke", "k") ~ "Moccasin",
    location %in% c("sun", "har") ~ "Moccasin",
    TRUE ~ NA_character_)) %>%
  mutate(plant_type = if_else(distance == "brome", "brome", "wheat")) %>%
  dplyr::select(year, region, sample_site, collection, plant_type,
                total.stems, inf, uninf, cut, c, e) %>%
  group_by(site, collection, year) %>%
  filter(collection == "fall") %>%
  mutate(par = sum(c,e)) %>% dplyr::select(-c(c,e)) %>%
  group_by(year, collection, region, sample_site, plant_type, site) %>%
  mutate(count = n(),
         per.inf = sum(inf)/sum(uninf),
         per.cut = sum(cut)/sum(inf),
         per.par = sum(par)/sum(inf)) %>%
  ungroup() %>%
  dplyr::select(-c(total.stems, site, inf, uninf, cut, par)) %>%
  pivot_longer(-c(year, collection, region, sample_site, 
                  plant_type, count),
               names_to = "variable",
               values_to = "value")
  group_by(year, collection, region, sample_site, plant_type) 
  mutate(count = sum(count),
         sd.inf = sd(per.inf),
         per.inf = mean(per.inf),
         sd.cut = sd(per.cut),
         per.cut = mean(per.cut),
         sd.par = sd(per.par),
         per.par = mean(per.par)) %>%
  dplyr::select(-c(total.stems, site, inf, uninf, cut, par))
  group_by(year, region, sample_site, collection, plant_type) %>%
  reframe(inf = sum(inf),
          uninf = sum(uninf),
          cut_sd = sd(cut),
          cut = sum(cut)/inf,
          par_sd = sd(par),
          par = sum(par),
          count = sum(count),
          par_se = par_sd/sqrt(count),
          cut_se = cut_sd/sqrt(count)) 
  mutate(inf_per = inf/(inf + uninf),
         cut_per = cut/inf,
         sd = sd(cut))
  


mutate(count = n(),
         par_sd = sd(sum(c,e)),
         cut_sd = sd(cut),
         par = sum(c,e),
         cut = sum(cut),
         inf = sum(inf),
         par_per = par/inf,
         cut_per = cut/inf) %>%
  ungroup() %>%
  dplyr::select(-c(site, location, c, e, cut, inf, 
                   uninf, distance, total.stems)) %>% distinct()
  distinct() %>% 
  group_by(year, region, sample_site, collection, plant_type) %>%
  pivot_longer(-c(year, region, sample_site, 
                  collection, plant_type, count),
               names_to = "per_category",
               values_to = "per") %>%
  group_by(year, region, sample_site, collection, plant_type,
           per_category) 
  
  
  
  
  
  mutate(plant_type = if_else(distance == "brome", "brome", "wheat"),
         p = sum(c,e)) %>%
  group_by(year, region, sample_site, plant_type) %>%
  reframe(year, region, sample_site, plant_type,
          total.stems = sum(total.stems),
          inf_per = sum(inf)/sum(total.stems),
          par_sum = sum(p),
          par_sd = sd(p),
          par_se = par_sd/sqrt(sum(inf)),
          cut_sum = sum(cut),
          cut_sd = sd(cut),
          cut_se = cut_sd/sqrt(sum(inf)),
          par_per = par_sum/sum(inf),
          par_per_sd = par_sd/sum(inf),
          par_per_se = par_se/sum(inf),
          cut_per = cut_sum/sum(inf),
          cut_per_se = cut_se/sum(inf)) %>%
  dplyr::select(-c("par_sd", "cut_sd", "total.stems",
                   "par_sum", "cut_sum")) %>%
  distinct() 

          par_per = par_sum/sum(inf),
          par_per_sd = par_sd/sum(inf),
          par_per_se = par_se/sum(inf),
          cut_per = cut_sum/sum(inf),
          cut_per_se = cut_se/sum(inf)) %>%
  distinct() %>% na.omit() %>%
  pivot_longer(-c(year, region, sample_site, plant_type, total.stems),
               names_to = "type",
               values_to = "value") %>%
  distinct()

plot.data %>%
  filter(region == "Big Sandy", 
         sample_site == "North Road",
         plant_type == "wheat")
  
plot.data %>%
  filter(region == "Big Sandy") %>%
  ggplot() +
  # geom_bar(stat = "identity",
  #          aes(x = sample_site, y = par_per, fill = plant_type),
  #          position = position_dodge(width = 0.6),
  #          width = 0.5) +
  geom_bar(stat = "identity",
           aes(x = sample_site, y = cut_per, fill = plant_type),
           position = position_dodge(width = 0.6),
           width = 0.5) +
  geom_errorbar(aes(x = sample_site,
                    ymin = cut_per - cut_per_se*10,
                    ymax = cut_per + cut_per_se*10,
                    group = plant_type),
                position = position_dodge(0.6),
                width = 0.2,
                alpha = 0.5) +
  # geom_errorbar(aes(x = sample_site,
  #                   ymin = par_per - par_per_se*10,
  #                   ymax = par_per + par_per_se*10,
  #                   group = plant_type),
  #               position = position_dodge(0.6),
  #               width = 0.2,
  #               alpha = 0.5) +
  facet_wrap(~year) +
  theme_bw()


mutate(type2 = if_else(
    type %in% c("p_mean", "p_sd", "p_se"), "p", "cut"),
    stat = str_replace(type, ".*_", "")) %>%
  dplyr::select(-type) %>%
  pivot_wider(values_from = value,
              names_from = stat) %>%
  filter(region == "Big Sandy")

plot.data %>%
  ggplot() +
  geom_bar(stat = "identity",
           aes(x = plant_type, y = mean, 
               fill = type2),
           position = position_dodge()) +
  facet_wrap(sample_site ~ year) +
  theme_bw()

  
ggplot() +
  facet_grid(sample_site ~ region) +
  geom_bar(stat = "identity",
           position = position_dodge(),
           data = par.data %>%
             filter(type == "p.inf"),
           aes(year, value, fill = "p.inf")) +
  geom_bar(stat = "identity",
           position = position_dodge(),
           data = par.data %>%
             filter(type == "p.cut"),
           aes(year, value, fill = "p.cut")) +
  geom_errorbar(data = par.data,
                aes(x = year,
                    ymin = mean - se,
                    ymax = mean + se),
                position = position_dodge(0.9),
                width = 0.2,
                alpha = 0.5) +
  theme_bw() +
  labs(x = element_blank(),
       y = "Percentage of stems (%)",
       fill = element_blank()) +
  scale_fill_brewer(palette = "Greens",
                    labels = c("Cut", "Infested"))
```

*B. inermis* displayed very low levels of *C. cinctus* cutting when compared to adjacent wheat fields. In Moccasin,

```{r infestation, eval = F}
comb.brome %>%
  group_by(location, collection, year) %>%
  # filter(collection == "fall") %>%
  reframe(inf = sum(inf)/sum(total.stems)) %>%
  distinct() %>%
  mutate(region = if_else(location %in% c("har", "sun", "k", "chs"), "moccasin", "big sandy")) %>%
  group_by(collection, year, region) %>%
  reframe(inf = mean(inf)) %>%
  na.omit() %>%
  arrange(desc(inf)) %>%
  group_by(collection) %>%
  reframe(inf = mean(inf))

  # na.omit() %>%
  # ggplot() +
  # geom_bar(stat = "identity",
  #          aes(x = location, y = inf)) +
  # facet_grid(year~collection)
```

```{r, eval = F}
comb.stubble <-
stubble.2023 %>%
  rbind(stubble.2022) %>%
  rename("c" = cocoon,
         "e" = eh,
         "total.stems" = total) %>%
  group_by(site, year, collection) %>%
  mutate(inf = sum(cut, inf.nc,c,e)) %>%
  dplyr::select(-c(inf.nc, larvae)) 

comb.stubble %>%
  mutate(region = if_else(location %in% c("har", "sun", "k", "chs"), "moccasin", "big sandy")) %>%
  ungroup() %>%
  reframe(inf = sum(inf)/sum(total.stems))
  group_by(region, collection, year) %>%
  reframe(inf = mean(inf))
```

```{r plot ratios with error bars}
# brome 2022
raw.2022 <- 
  read_excel("/Users/jacksonstrand/Library/CloudStorage/OneDrive-MontanaStateUniversity/Data/BWW/Field/field Sites/2022/2022 FS Stem Data (2).xlsx", sheet = "n.infested") %>%
  mutate(year = "2022") %>%
  dplyr::select(-c(other, date.proc, name, 
                   par.rate, cut.rate, inf)) %>%
  rename("site" = site.cap)

# brome 2023
raw.2023 <-
read_excel("/Users/jacksonstrand/Library/CloudStorage/OneDrive-MontanaStateUniversity/Data/BWW/Field/field Sites/2023/2023\ Field Site\ Data.xlsx", sheet = "n.infested") %>%
  mutate(year = "2023") %>%
  dplyr::select(-c(loc.stub, date.proc, uv, ur, iv, ir, ix, 
                   total.stems, add, inf, a)) %>%
    rename(uv = n.uv,
           ur = n.ur,
           iv = n.iv,
           ir = n.ir,
           ix = n.ix,
           total.stems = n.total)
# combine brome years
comb.brome <- 
raw.2023 %>%
  rbind(raw.2022) %>%
  group_by(site, year, collection) %>%
  mutate(inf = sum(iv, ir, ix),
         uninf = sum(uv, ur)) %>%
  dplyr::select(-c(iv, ir, ix, uv, ur)) %>%
  mutate(distance = "brome")


# stubble 2023
stubble.2023 <-
  read_excel("/Users/jacksonstrand/Library/CloudStorage/OneDrive-MontanaStateUniversity/Data/BWW/Field/field Sites/2023/2023\ Field Site\ Data.xlsx", 
           sheet = "stubble") %>%
  dplyr::select(-c(name,date.proc,"%inf", "%cut")) %>%
  na.omit() %>%
  mutate(year = "2023")

# stubble 2022
stubble.2022 <-
  read_excel("/Users/jacksonstrand/Library/CloudStorage/OneDrive-MontanaStateUniversity/Data/BWW/Field/field Sites/2022/2022 FS Stem Data (2).xlsx", 
             sheet = "stubble") %>%
  mutate(year = "2022") %>%
  dplyr::select(-c(name, date.proc, "%inf", "%cut"))

comb.stubble <-
stubble.2023 %>%
  rbind(stubble.2022) %>%
  rename("c" = cocoon,
         "e" = eh,
         "total.stems" = total) %>%
  mutate(inf = sum(cut, inf.nc,c,e)) %>%
  dplyr::select(-c(inf.nc, larvae)) 

########### combine brome and wheat data ###########
sum(comb.brome$total.stems, na.rm = TRUE) +
sum(comb.stubble$total.stems, na.rm = TRUE)

comb.brome %>%
  rbind(comb.stubble) %>%
  na.omit() %>%
  dplyr::select(year, site, location, collection, distance, everything()) %>%
  mutate(location = if_else(location %in% c("ke", "kw"), "k", location),
         location = if_else(location %in% c("nn", "ns"), "n", location)) %>%
  mutate(region = if_else(
    location %in% c("har", "sun", "k", "chs"),
    "moccasin", "big sandy")) %>%
  mutate(plant_type = if_else(distance == "brome", "brome", "wheat")) %>%
  dplyr::select(-distance) %>%
  group_by(year, site, location, collection) %>%
  mutate(p = sum(c, e)) %>% dplyr::select(-c(c, e, inf, uninf)) %>%
  group_by(year, region, collection, plant_type) %>%
  reframe(year, region, collection, plant_type,
          total.stems = sum(total.stems),
          p_mean = mean(p),
          p_sd = sd(p),
          p_se = p_sd/sqrt(total.stems),
          cut_mean = mean(cut),
          cut_sd = sd(cut),
          cut_se = cut_sd/sqrt(total.stems)) %>%
  distinct() %>%
  group_by(year, region, collection, plant_type) %>%
  mutate(ratio = p_mean/cut_mean,
         ratio_se = ratio*sqrt((p_se/p_mean)^2 + (cut_se/cut_mean)^2)) %>%
  filter(collection == "fall") %>%
  ggplot() +
  geom_bar(stat = "identity",
             aes(x = plant_type,
                 y = ratio, 
                 fill = plant_type),
             color = "black") +
  geom_errorbar(aes(x = plant_type,
                    ymin = ratio - ratio_se,
                    ymax = ratio + ratio_se),
                width = 0.15) +
  theme_bw() +
  theme(legend.position = "none") +
  labs(x = element_blank(),
       y = "Ratio of parasitized stems to cut stems") +
  scale_fill_brewer(palette = "Greys") +
  geom_hline(yintercept = 1, 
             linetype = "dashed",
             color = "black") +
  facet_grid(year~region)
```

```{r, eval = F}

# i want to compare moccasin vs big sandy
joined.stubble %>%
  mutate(region = if_else(
    location %in% c("har", "sun", "k"), 
    "moccasin", "big sandy")) %>%
  ungroup() %>%
  dplyr::select(location, region) %>%
  distinct()

joined.stubble %>%
  ungroup() %>%
  dplyr::select(location) %>%
  distinct()

# table <-
joined.stubble %>%
  mutate(region = if_else(
    location %in% c("har", "sun", "k"), 
    "moccasin", "big sandy")) %>%
  pivot_longer(-c(site, location, distance, year, collection, region),
               names_to = "type",
               values_to = "value") %>%
  distinct() %>%
  rbind(n.inf) %>%  # rbind the brome data
  # filter(!type == "total") %>%  # remove type = "total"
  mutate(type = case_when(
    type == "c" ~ "p",
    type == "e" ~ "p",
    TRUE ~ type)) %>% # replace the e and c variables with p, for simplicity
  ungroup() %>%
  dplyr::select(-site) %>%
  group_by(location, distance, year, collection, type, region) %>%
  filter(type %in% c("cut", "p")) %>%
  mutate(plant_type = ifelse(distance == 5 | distance == 20, "wheat", "brome")) %>%
  ungroup() %>%
  group_by(location, distance, type, region) %>%
  reframe(plant_type, region,
          value = sum(value)) 
  ungroup() %>%
  distinct() %>%
  dplyr::select(-location, -distance) %>%
  group_by(plant_type, type) %>%
  mutate(plant_type, type, 
         count = n(),
         mean = mean(value),
         sd = sd(value),
         se = sd/sqrt(count)) %>%
  ungroup() %>%
  dplyr::select(-value, -count) %>%
  distinct() %>%
  group_by(plant_type) %>%
  reframe(plant_type,
          ratio = lead(mean)/mean,
          se = ratio * sqrt(((se / mean)^2) + (se/mean)^2)) %>%
  na.omit() %>%
  ggplot() +
    geom_bar(stat = "identity",
             aes(x = plant_type,
                 y = ratio, 
                 fill = plant_type),
             color = "black") +
  geom_errorbar(aes(x = plant_type,
                    ymin = ratio - se,
                    ymax = ratio + se),
                width = 0.15) +
  theme_bw() +
  theme(legend.position = "none") +
  labs(x = element_blank(),
       y = "Ratio of parasitized stems to cut stems") +
  scale_fill_brewer(palette = "Greys")

data <- 
  table %>%
  group_by(plant_type) %>%
  reframe(plant_type,
          ratio = lead(mean)/mean,
          se = sqrt(((se / mean)^2) + (se/mean)^2)) %>%
  na.omit()

# Calculate ratio of p to cut for each plant type
ratios <- aggregate(mean ~ plant_type, data = table[table$type == "p", ], FUN = function(x) x / table[table$type == "cut", "mean"])

# Calculate standard error for each ratio
ratios$se_ratio <- sqrt((table[table$type == "p", "se"] / table[table$type == "p", "mean"])^2 +
                                      (table[table$type == "cut", "se"] / table[table$type == "cut", "mean"])^2)

x <- c("Brome", "Wheat")
ratios <- ratios
se <- ratios$se_ratio

ratio.data.plot <-
data.frame(as.data.frame(x), as.data.frame(data$ratio), se) %>%
  group_by(x) %>%
  mutate(se = se*data.ratio)


ggplot() +
  geom_bar(data = ratio.data.plot,
           aes(x = x,
               y = data.ratio,
               fill = x),
           stat = "identity",
           color = "black") +
  geom_errorbar(data = ratio.data.plot,
                aes(x = x,
                    ymin = data.ratio - se,
                    ymax = data.ratio + se),
                width = 0.15) +
  theme_bw() +
  theme(legend.position = "none") +
  labs(x = element_blank(),
       y = "Ratio of parasitized stems to cut stems") +
  scale_fill_brewer(palette = "Greys")

```

<!-- Big Sandy -->

<!-- Turn: 3m x 17m = 51$m^2$ -->

<!-- North Road North: 5m x 20m = 100$m^2$ -->

<!-- North Road South: 5m x 20m = 200$m^2$ -->

<!-- Each sample: 1$m^2$ -->

<!-- Wheat field sampled area 4 rows, 10 meters between each row samples taken at 5 and 20 distance from the edge This means the area of the sampled area is 20x4m = 80$m^2$ Each sample we'll count as 1m x 0.5m = 0.5$m^2$ This means 160 possible samples from the sampling area. -->

<!-- Big Sandy NN Brome: 100$m^2$ - number of Wheat: 80$m^2$ -->

<!-- Just need the density per unit area. don't need the total number of p-toids in the entire sampling area. -->

<!-- Just need to standardize it to area so that the sampling size of wheat is the same as brome. These were different in the field. Brome: 1$m^2$ wheat: 0.5$m^2$ -->

<!-- Also need: - weather data to see if there is a drought causing crashes/spikes - NDVI data to show greening of brome compared to wheat late in the season -->

## Citations

```{r save}

# duplicate the wheat data to match up with brome data locations
# we are duplicating some of the stubble data so that we have stubble data
# for the brome sections that are across the road from stubble data

# I don't think I need this for the analysis that I'm doing
# joined.stubble <-
#   joined.stubble %>%
#   bind_rows(joined.stubble %>%
#               filter(location == "n") %>%
#               mutate(location = "ns")) %>%
#   bind_rows(joined.stubble %>%
#               filter(location == "n") %>%
#               mutate(location = "nn")) %>%
#   filter(!location == "n") %>%
#   bind_rows(joined.stubble %>%
#               filter(location == "har") %>%
#               mutate(location = "sun")) 
```
